type Query {
  jobs(limit: Int, offset: Int): JobSubList
  # jobs0: JobSubList
  job(id: Int!): Job
  company(id: Int!): Company
}
type Mutation {
  createJob(input: CreateJobInput!): Job
  deleteJob(id: ID!): Job
  updateJob(input: UpdateJobInput!): Job
}
type Job {
  id: ID!
  title: String!
  description: String
  location: String!
  salary: Int!
  companyId: Int!
  postedAt: DateTime!
  company: Company!
}
type Company {
  id: Int!
  name: String!
  description: String
  jobs: [Job!]!
}
scalar DateTime
type JobSubList {
  items: [Job!]!
  totalCount: Int!
}
input CreateJobInput {
  title: String!
  description: String
  location: String!
  salary: Int!
  companyId: Int!
}

input UpdateJobInput {
  id: ID!
  title: String
  description: String
  location: String
  salary: Int
  companyId: Int
}
